<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Liste doublement chainée:  Fichier source de liste.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Liste doublement chainée
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.8.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Recherche');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Page&#160;principale</span></a></li>
      <li><a href="annotated.html"><span>Structures&#160;de&#160;données</span></a></li>
      <li class="current"><a href="files.html"><span>Fichiers</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Recherche" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>Liste&#160;des&#160;fichiers</span></a></li>
      <li><a href="globals.html"><span>Variables&#160;globale</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Tout</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Structures de données</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Fichiers</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Fonctions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Définitions de type</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Macros</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">liste.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="liste_8h.html">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;﻿</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#ifndef LISTE_H</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define LISTE_H</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;errno.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">// Ne pas manipuler autrement que le constructeur sous peine de boucle infini ou effet de bord indésirable</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="code" href="structtype_associe.html">   29</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a>{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="code" href="structtype_associe.html#ab3fd33f37ae53e2b1ee394b8a0d45677">   33</a></span>&#160;    void (*<a class="code" href="structtype_associe.html#ab3fd33f37ae53e2b1ee394b8a0d45677" title="Affiche sur la sortie standard data.">fonctionAffichage</a>)(<span class="keywordtype">void</span>* data);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="code" href="structtype_associe.html#a2a2b3a7933ce17765c9516535c323320">   37</a></span>&#160;    int (*<a class="code" href="structtype_associe.html#a2a2b3a7933ce17765c9516535c323320" title="Compare data1 et data2, renvoie -1 si data1 &lt; data2, 0 si data1 = data2, 1 si data1 &gt; data2...">fonctionCompare</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span>* data1,<span class="keyword">const</span> <span class="keywordtype">void</span>* data2);</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="code" href="structtype_associe.html#ad740bd3d10d0b85df91f4c9698e1cf17">   39</a></span>&#160;    int (*<a class="code" href="structtype_associe.html#ad740bd3d10d0b85df91f4c9698e1cf17" title="Renvoie 1 si la fonction d&#39;affichage et la fonction de comparaison ne sont pas définies, sinon 0.">estNull</a>)(<span class="keyword">struct </span><a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> ta);</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="structtype_associe.html#acf6f2d923ef0db699935b2838d68d15b">   41</a></span>&#160;    int (*<a class="code" href="structtype_associe.html#acf6f2d923ef0db699935b2838d68d15b" title="Renvoie 1 si la structure ta1 et ta2 sont identiques, sinon 0.">estEgal</a>)(<span class="keyword">struct </span><a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> ta1, struct <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> ta2);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;};</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="liste_8h.html#ac7d8411010c037e8b16853cebad6e38e">   47</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html">   59</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a>{</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a735984d41155bc1032e09bece8f8d66d">   61</a></span>&#160;    <span class="keywordtype">void</span>* <a class="code" href="struct_cellule__struct.html#a735984d41155bc1032e09bece8f8d66d" title="Contenu de la cellule.">data</a>;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#ac96ce3772774116e21488f52a2da7513">   63</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a> *<a class="code" href="struct_cellule__struct.html#ac96ce3772774116e21488f52a2da7513" title="Pointeur vers la cellule précedente.">previous</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a6da71fec21a4de901e96bc64b1ad9211">   65</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a> *<a class="code" href="struct_cellule__struct.html#a6da71fec21a4de901e96bc64b1ad9211" title="Pointeur vers la cellule suivante.">next</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a5810b6407672b8e7aeba609b4bb649de">   67</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="struct_cellule__struct.html#a5810b6407672b8e7aeba609b4bb649de" title="Vaut 1 si cellule est presente dans une liste, sinon 0.">used</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a22f1c4276d632b4587d07b11f00b7602">   69</a></span>&#160;    <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> <a class="code" href="struct_cellule__struct.html#a22f1c4276d632b4587d07b11f00b7602" title="Type associe à la cellule (par default int).">ta</a>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a441e830d8291bff9ff04dd58eba1180d">   73</a></span>&#160;    void (*<a class="code" href="struct_cellule__struct.html#a441e830d8291bff9ff04dd58eba1180d" title="Fonction d&#39;affichage de la cellule.">afficher</a>)(<span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a> *c);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="struct_cellule__struct.html#a45900561aaea64355a09714d719398d3">   77</a></span>&#160;    int (*<a class="code" href="struct_cellule__struct.html#a45900561aaea64355a09714d719398d3" title="Fonction de comparaison de 2 cellules.">comparer</a>)(<span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a> *c1, <span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a> *c2);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;};</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="code" href="liste_8h.html#a15ddea793abf8d86dcbdc7772979cc00">   83</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_cellule__struct.html" title="la structure Cellule est la representation d&#39;un element d&#39;une liste.">Cellule_struct</a>* <a class="code" href="liste_8h.html#a15ddea793abf8d86dcbdc7772979cc00" title="pointeur vers la structure Cellule.">Cellule</a>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="struct_liste__struct.html">  102</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a>{</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a95d092b84f52d1a9dc3d77c96ea7c671">  104</a></span>&#160;    Cellule <a class="code" href="struct_liste__struct.html#a95d092b84f52d1a9dc3d77c96ea7c671" title="Point d&#39;entrée dans la suite des Cellules.">entry</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a439227feff9d7f55384e8780cfc2eb82">  106</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="struct_liste__struct.html#a439227feff9d7f55384e8780cfc2eb82" title="Mémorise la taille ( nombre de cellules) de la liste.">size</a>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1e4215e27cac56c19db1a0429e8d3323">  110</a></span>&#160;    <a class="code" href="liste_8h.html#a15ddea793abf8d86dcbdc7772979cc00" title="pointeur vers la structure Cellule.">Cellule</a> (*<a class="code" href="struct_liste__struct.html#a1e4215e27cac56c19db1a0429e8d3323" title="Renvoie l&#39;element d&#39;index correspondant.">a</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1cebe0b3480a5fbf3bd541400afda150">  114</a></span>&#160;    <a class="code" href="liste_8h.html#a15ddea793abf8d86dcbdc7772979cc00" title="pointeur vers la structure Cellule.">Cellule</a> (*<a class="code" href="struct_liste__struct.html#a1cebe0b3480a5fbf3bd541400afda150" title="Renvoie le premier element.">premierElement</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#aa0f50a667aefc89fe85d7838088e90da">  118</a></span>&#160;    <a class="code" href="liste_8h.html#a15ddea793abf8d86dcbdc7772979cc00" title="pointeur vers la structure Cellule.">Cellule</a> (*<a class="code" href="struct_liste__struct.html#aa0f50a667aefc89fe85d7838088e90da" title="Renvoie le dernier element.">dernierElement</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1b7e362ad19dc26e5244804b35b79e5d">  122</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a1b7e362ad19dc26e5244804b35b79e5d" title="Renvoie 1 si les deux listes sont égales sinon 0.">egal</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l1, <span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l2);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Les fonctions d&#39;insertion font une copie de la cellule passée en argument si celle ci est dejà dans une liste</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">/* -------------------------------------  */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a18441e4857345eb3757d893e73d71e17">  128</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a18441e4857345eb3757d893e73d71e17" title="Insère une cellule au début de la liste.">insererDebut</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, Cellule c);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#abf122e846aef2a759e4ed086575a2635">  132</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#abf122e846aef2a759e4ed086575a2635" title="Insère une cellule à la fin de la liste.">insererFin</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, Cellule c);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a5a30362c92122550c6f8620f2e517560">  136</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a5a30362c92122550c6f8620f2e517560" title="Insère une cellule à l&#39;index fourni tel que l.insererAIndex(l,c,1) -&gt; l.a(l,1) == c...">insererAIndex</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, Cellule c, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">/* -------------------------------------  */</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#abfd3a36b0e295e0fd1d1576dd1f92c04">  141</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#abfd3a36b0e295e0fd1d1576dd1f92c04" title="Supprime la première cellule de la liste.">supprimerPremier</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#ad7f22345aee12ddc2dac84af984ce476">  145</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#ad7f22345aee12ddc2dac84af984ce476" title="Supprime la dernière cellule de la liste.">supprimerDernier</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a8c8a108fb838b2d6eb779e6c032e6135">  149</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a8c8a108fb838b2d6eb779e6c032e6135" title="Supprime la cellule à l&#39;index donné.">supprimerAIndex</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1fc69b0fa9643ff704ebae832bc5b7f9">  153</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a1fc69b0fa9643ff704ebae832bc5b7f9" title="Vide la liste (Supprime tout les éléments).">vider</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a88e108a13a94f7ceaa31aac47131282b">  157</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a88e108a13a94f7ceaa31aac47131282b" title="Insère la deuxième liste dans la première au début (recopie de la deuxième dans la première)...">insererListeDebut</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *lAInserer);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a3fc26dfaff4a3109c1786920de321c99">  161</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a3fc26dfaff4a3109c1786920de321c99" title="Insère la deuxième liste dans la première à la fin (recopie de la deuxième dans la première)...">insererListeFin</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *lAInserer);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1c729ab40823f33e35a27795983cc975">  165</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a1c729ab40823f33e35a27795983cc975" title="Insère la deuxième liste dans la première à l&#39;index (recopie de la deuxième dans la première)...">insererListeAIndex</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *lAInserer, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a86119a3a032861a1c1cfbb1cd0b2c1e4">  169</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a>* (*sousListe)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a22f1c4276d632b4587d07b11f00b7602">  171</a></span>&#160;    <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> <a class="code" href="struct_liste__struct.html#a22f1c4276d632b4587d07b11f00b7602" title="Type Associe à la liste.">ta</a>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a5e9559ce1b80aed4d75da4f26338f372">  175</a></span>&#160;    void (*<a class="code" href="struct_liste__struct.html#a5e9559ce1b80aed4d75da4f26338f372" title="Affiche la liste grâce au fonction &quot;afficher&quot; de ta, si ta est null, il y&#39;a appelle à afficher de l...">afficher</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="code" href="struct_liste__struct.html#a1923c053c634b7e7eb5a7a37948fbe77">  179</a></span>&#160;    int (*<a class="code" href="struct_liste__struct.html#a1923c053c634b7e7eb5a7a37948fbe77" title="Trie une liste dans l&#39;ordre croissant, il faut que le type associé soit non-null.">trier</a>)(<span class="keyword">struct </span><a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a> *l);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;};</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="code" href="liste_8h.html#a5b59b555992b41f8daba3fe9db70a3b4">  185</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste_struct</a>* <a class="code" href="liste_8h.html#a5b59b555992b41f8daba3fe9db70a3b4" title="pointeur vers la structure Liste.">Liste</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">// Fonction annexe</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span><span class="keywordtype">int</span> Cellule_egal(Cellule c1, Cellule c2);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">int</span> Liste_egal(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l1,<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l2);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;Cellule Cellule_cloner(Cellule c);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> Liste_cloner(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keywordtype">int</span> Cellule_comparer(Cellule c1, Cellule c2);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">// Constructeurs</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"></span><a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> typeAssocie_creer(<span class="keywordtype">void</span> fctAffichage(<span class="keywordtype">void</span> *),<span class="keywordtype">int</span> fctCompare(<span class="keyword">const</span> <span class="keywordtype">void</span> *,<span class="keyword">const</span> <span class="keywordtype">void</span> *));</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;Cellule Cellule_creer(<span class="keywordtype">void</span>* data);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> Liste_creer(Cellule c, <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> <a class="code" href="struct_liste__struct.html#a22f1c4276d632b4587d07b11f00b7602" title="Type Associe à la liste.">ta</a>);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">// Destructeurs</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment"></span><span class="keywordtype">int</span> Cellule_detruire(Cellule c);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">int</span> Cellule_detruireSiInutilise(Cellule c);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordtype">int</span> Liste_detruire(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">// Fonctions</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"></span>Cellule Liste_a(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;Cellule Liste_premierElement(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;Cellule Liste_dernierElement(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keywordtype">int</span> Liste_insererDebut(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, Cellule c);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keywordtype">int</span> Liste_insererFin(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, Cellule c);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordtype">int</span> Liste_insererAIndex(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, Cellule c, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keywordtype">int</span> Liste_supprimerPremier(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keywordtype">int</span> Liste_supprimerDernier(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keywordtype">int</span> Liste_supprimerAIndex(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keywordtype">int</span> Liste_vider(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keywordtype">int</span> Liste_insererListeDebut(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> lAInserer);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keywordtype">int</span> Liste_insererListeFin(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> lAInserer);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keywordtype">int</span> Liste_insererListeAIndex(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> lAInserer, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> Liste_sousListe(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l, <span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keywordtype">void</span> Liste_afficher(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keywordtype">int</span> Liste_trier(<a class="code" href="struct_liste__struct.html" title="la structure Liste est une collection de cellule.">Liste</a> l);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keywordtype">void</span> Cellule_afficher(Cellule c);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">// --- Fonction pour typeAssocie</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment"></span><span class="keywordtype">int</span> typeAssocie_estNull(<a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> <a class="code" href="struct_liste__struct.html#a22f1c4276d632b4587d07b11f00b7602" title="Type Associe à la liste.">ta</a>);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keywordtype">int</span> typeAssocie_estEgal(<a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> ta1,<a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> ta2);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="keywordtype">void</span> __CHAINE__affiche(<span class="keywordtype">void</span> *ch);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">int</span> __CHAINE__compare(<span class="keyword">const</span> <span class="keywordtype">void</span> *ch1,<span class="keyword">const</span> <span class="keywordtype">void</span> *ch2);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="keywordtype">void</span> __INT__affiche(<span class="keywordtype">void</span>* in);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keywordtype">int</span> __INT__compare(<span class="keyword">const</span> <span class="keywordtype">void</span> *in1, <span class="keyword">const</span> <span class="keywordtype">void</span> *in2);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keywordtype">void</span> __SHORT__affiche(<span class="keywordtype">void</span>* sh);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keywordtype">int</span> __SHORT__compare(<span class="keyword">const</span> <span class="keywordtype">void</span>* sh1,<span class="keyword">const</span> <span class="keywordtype">void</span>* sh2);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keywordtype">void</span> __LONG__affiche(<span class="keywordtype">void</span>* lo);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keywordtype">int</span> __LONG__compare(<span class="keyword">const</span> <span class="keywordtype">void</span>* lo1,<span class="keyword">const</span> <span class="keywordtype">void</span>* lo2);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="keywordtype">void</span> __FLOAT__affiche(<span class="keywordtype">void</span>* fl);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keywordtype">int</span> __FLOAT__compare(<span class="keyword">const</span> <span class="keywordtype">void</span>* fl1,<span class="keyword">const</span> <span class="keywordtype">void</span>* fl2);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keywordtype">void</span> __DOUBLE__affiche(<span class="keywordtype">void</span>* dou);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="keywordtype">int</span> __DOUBLE__compare(<span class="keyword">const</span> <span class="keywordtype">void</span>* dou1,<span class="keyword">const</span> <span class="keywordtype">void</span>* dou2);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="keywordtype">void</span> __CHAR__affiche(<span class="keywordtype">void</span>* ch);</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keywordtype">int</span> __CHAR__compare(<span class="keyword">const</span> <span class="keywordtype">void</span>* ch1,<span class="keyword">const</span> <span class="keywordtype">void</span>* ch2);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_chaine = {__CHAINE__affiche,__CHAINE__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_int = {__INT__affiche,__INT__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_short = {__SHORT__affiche,__SHORT__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_long = {__LONG__affiche,__LONG__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_float = {__FLOAT__affiche,__FLOAT__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_double = {__DOUBLE__affiche,__DOUBLE__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_char = {__CHAR__affiche,__CHAR__compare,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="structtype_associe.html" title="la structure permettant d&#39;associer un type à une Liste ou une Cellule.">typeAssocie</a> associe_void = {NULL,NULL,typeAssocie_estNull,typeAssocie_estEgal};</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno"><a class="code" href="liste_8h.html#ad7585cfed8eb0a342187c4a9bf9f6554">  480</a></span>&#160;<span class="preprocessor">#define CELLULE_VALEUR(Cellule) \</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_int),sizeof(typeAssocie)) ? *(int*)Cellule-&gt;data : \</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_short),sizeof(typeAssocie)) ? *(short*)Cellule-&gt;data : \</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_long),sizeof(typeAssocie)) ? *(long*)Cellule-&gt;data : \</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_float),sizeof(typeAssocie)) ? *(float*)Cellule-&gt;data : \</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_double),sizeof(typeAssocie)) ? *(double*)Cellule-&gt;data : \</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="preprocessor">    !memcmp(&amp;(Cellule-&gt;ta),&amp;(associe_char),sizeof(typeAssocie)) ? *(char*)Cellule-&gt;data : 0\</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="preprocessor">#endif // LISTE_H</span></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Généré le Samedi Décembre 1 2012 23:16:52 pour Liste doublement chainée par &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.2
</small></address>
</body>
</html>
